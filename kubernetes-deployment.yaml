apiVersion: apps/v1
kind: Deployment
metadata:
  name: kaelan-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kaelan-app
  template:
    metadata:
      labels:
        app: kaelan-app
    spec:
      containers:
        - name: kaelan-app
          image: kaelan-app:1.0.0
          ports:
          - containerPort: 3000
          env:
            - name: MONGO_DB_URL
              value: "mongodb://db-service:27017"
            - name: PORT
              value: "3000"
            - name: SECURITY_KEY
              value: "12345"
---
apiVersion: v1
kind: Service
metadata:
  name: kaelan-app-lb
spec:
  selector:
    app: kaelan-app
  ports:
    - name: http
      port: 8080
      targetPort: 3000
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: db-pv-vol
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 3Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/ubuntu/pv-data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: database-persistent-volume-claim
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: manual
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      name: mongo
  template:
    metadata:
      labels:
        name: mongo
    spec:
      containers:
      - image: mongo:5.0
        name: mongo
        ports:
        - containerPort: 27017
        volumeMounts:
          - name: mongo-storage
            mountPath: /data/db
      volumes:
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: database-persistent-volume-claim
---
apiVersion: v1
kind: Service
metadata:
  name: db-service
  labels:
    name: mongo
    app: todoapp
spec:
  selector:
    name: mongo
  type: ClusterIP
  ports:
    - name: db
      port: 27017
      targetPort: 27017